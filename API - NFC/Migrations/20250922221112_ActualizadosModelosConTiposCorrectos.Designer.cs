// <auto-generated />
using System;
using API___NFC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API___NFC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250922221112_ActualizadosModelosConTiposCorrectos")]
    partial class ActualizadosModelosConTiposCorrectos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API___NFC.Models.Entity.Academico.Ficha", b =>
                {
                    b.Property<int>("IdFicha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFicha"));

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdPrograma")
                        .HasColumnType("int");

                    b.HasKey("IdFicha");

                    b.HasIndex("IdPrograma");

                    b.ToTable("Ficha");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Academico.Programa", b =>
                {
                    b.Property<int>("IdPrograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrograma"));

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NivelFormacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePrograma")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPrograma");

                    b.ToTable("Programa");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Inventario.Elemento", b =>
                {
                    b.Property<int>("IdElemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdElemento"));

                    b.Property<string>("CaracteristicasFisicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaracteristicasTecnicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoElemento")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imageUrl");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreElemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("elemento");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TieneNFCTag")
                        .HasColumnType("bit");

                    b.HasKey("IdElemento");

                    b.HasIndex("IdPropietario");

                    b.HasIndex("IdTipoElemento");

                    b.ToTable("Elemento");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Inventario.TipoElemento", b =>
                {
                    b.Property<int>("IdTipoElemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoElemento"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreTipoElemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoElemento");

                    b.HasKey("IdTipoElemento");

                    b.ToTable("TipoElemento");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Proceso.Proceso", b =>
                {
                    b.Property<int>("IdProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProceso"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdElemento")
                        .HasColumnType("int");

                    b.Property<int?>("IdPortador")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<string>("RequiereOtroProceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStampActual")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProceso");

                    b.HasIndex("IdElemento");

                    b.HasIndex("IdPortador");

                    b.HasIndex("IdTipoProceso");

                    b.ToTable("Proceso");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Proceso.TipoProceso", b =>
                {
                    b.Property<int>("IdTipoProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoProceso"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoProceso");

                    b.ToTable("TipoProceso");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Aprendiz", b =>
                {
                    b.Property<int>("IdAprendiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAprendiz"));

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdFicha")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAprendiz");

                    b.HasIndex("IdFicha");

                    b.ToTable("Aprendiz");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EsNatural")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFuncionario");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdAprendiz")
                        .HasColumnType("int");

                    b.Property<int?>("IdFuncionario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdAprendiz");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Academico.Ficha", b =>
                {
                    b.HasOne("API___NFC.Models.Entity.Academico.Programa", "Programa")
                        .WithMany()
                        .HasForeignKey("IdPrograma");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Inventario.Elemento", b =>
                {
                    b.HasOne("API___NFC.Models.Entity.Users.Usuario", "Propietario")
                        .WithMany("Elementos")
                        .HasForeignKey("IdPropietario");

                    b.HasOne("API___NFC.Models.Entity.Inventario.TipoElemento", "TipoElemento")
                        .WithMany()
                        .HasForeignKey("IdTipoElemento");

                    b.Navigation("Propietario");

                    b.Navigation("TipoElemento");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Proceso.Proceso", b =>
                {
                    b.HasOne("API___NFC.Models.Entity.Inventario.Elemento", "Elemento")
                        .WithMany()
                        .HasForeignKey("IdElemento");

                    b.HasOne("API___NFC.Models.Entity.Users.Usuario", "Portador")
                        .WithMany()
                        .HasForeignKey("IdPortador");

                    b.HasOne("API___NFC.Models.Entity.Proceso.TipoProceso", "TipoProceso")
                        .WithMany()
                        .HasForeignKey("IdTipoProceso");

                    b.Navigation("Elemento");

                    b.Navigation("Portador");

                    b.Navigation("TipoProceso");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Aprendiz", b =>
                {
                    b.HasOne("API___NFC.Models.Entity.Academico.Ficha", "Ficha")
                        .WithMany()
                        .HasForeignKey("IdFicha");

                    b.Navigation("Ficha");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Usuario", b =>
                {
                    b.HasOne("API___NFC.Models.Entity.Users.Aprendiz", "Aprendiz")
                        .WithMany()
                        .HasForeignKey("IdAprendiz");

                    b.HasOne("API___NFC.Models.Entity.Users.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("IdFuncionario");

                    b.Navigation("Aprendiz");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("API___NFC.Models.Entity.Users.Usuario", b =>
                {
                    b.Navigation("Elementos");
                });
#pragma warning restore 612, 618
        }
    }
}
