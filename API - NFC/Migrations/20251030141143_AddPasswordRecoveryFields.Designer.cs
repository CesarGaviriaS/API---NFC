// <auto-generated />
using System;
using API_NFC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API___NFC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251030141143_AddPasswordRecoveryFields")]
    partial class AddPasswordRecoveryFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API___NFC.Models.Aprendiz", b =>
                {
                    b.Property<int>("IdAprendiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAprendiz"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdFicha")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("IdAprendiz");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("IdFicha");

                    b.HasIndex("NumeroDocumento")
                        .IsUnique();

                    b.ToTable("Aprendiz", t =>
                        {
                            t.HasCheckConstraint("CHK_Aprendiz_TipoDocumento", "(TipoDocumento='PA' OR TipoDocumento='CE' OR TipoDocumento='TI' OR TipoDocumento='CC')");
                        });
                });

            modelBuilder.Entity("API___NFC.Models.Elemento", b =>
                {
                    b.Property<int>("IdElemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdElemento"));

                    b.Property<string>("CodigoNFC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoElemento")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TipoPropietario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdElemento");

                    b.HasIndex("CodigoNFC")
                        .IsUnique()
                        .HasFilter("[CodigoNFC] IS NOT NULL");

                    b.HasIndex("IdTipoElemento");

                    b.HasIndex("Serial")
                        .IsUnique();

                    b.ToTable("Elemento", t =>
                        {
                            t.HasCheckConstraint("CHK_Elemento_TipoPropietario", "(TipoPropietario='Usuario' OR TipoPropietario='Aprendiz')");
                        });
                });

            modelBuilder.Entity("API___NFC.Models.ElementoProceso", b =>
                {
                    b.Property<int>("IdElementoProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdElementoProceso"));

                    b.Property<int>("IdElemento")
                        .HasColumnType("int");

                    b.Property<int>("IdProceso")
                        .HasColumnType("int");

                    b.Property<bool?>("Validado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdElementoProceso");

                    b.HasIndex("IdElemento");

                    b.HasIndex("IdProceso");

                    b.ToTable("ElementoProceso");
                });

            modelBuilder.Entity("API___NFC.Models.Ficha", b =>
                {
                    b.Property<int>("IdFicha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFicha"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrograma")
                        .HasColumnType("int");

                    b.HasKey("IdFicha");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.HasIndex("IdPrograma");

                    b.ToTable("Ficha", (string)null);
                });

            modelBuilder.Entity("API___NFC.Models.Proceso", b =>
                {
                    b.Property<int>("IdProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProceso"));

                    b.Property<int?>("IdAprendiz")
                        .HasColumnType("int");

                    b.Property<int>("IdGuardia")
                        .HasColumnType("int");

                    b.Property<int?>("IdProceso_Relacionado")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiereOtrosProcesos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("SincronizadoBD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("TimeStampEntradaSalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdProceso");

                    b.HasIndex("IdAprendiz");

                    b.HasIndex("IdTipoProceso");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Proceso", t =>
                        {
                            t.HasCheckConstraint("CHK_Proceso_TipoPersona", "(TipoPersona='Usuario' OR TipoPersona='Aprendiz')");
                        });
                });

            modelBuilder.Entity("API___NFC.Models.Programa", b =>
                {
                    b.Property<int>("IdPrograma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrograma"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NivelFormacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombrePrograma")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdPrograma");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Programa", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Programa_NivelFormacion", "(NivelFormacion='Operario' OR NivelFormacion='Especialización' OR NivelFormacion='Tecnólogo' OR NivelFormacion='Técnico')");
                        });
                });

            modelBuilder.Entity("API___NFC.Models.RegistroNFC", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegistro"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdAprendiz")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoRegistro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdAprendiz");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RegistrosNFC");
                });

            modelBuilder.Entity("API___NFC.Models.TipoElemento", b =>
                {
                    b.Property<int>("IdTipoElemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoElemento"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool?>("RequiereNFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoElemento");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("TipoElemento");
                });

            modelBuilder.Entity("API___NFC.Models.TipoProceso", b =>
                {
                    b.Property<int>("IdTipoProceso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoProceso"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoProceso");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("TipoProceso");
                });

            modelBuilder.Entity("API___NFC.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CodigoBarras")
                        .IsUnique();

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("NumeroDocumento")
                        .IsUnique();

                    b.ToTable("Usuario", t =>
                        {
                            t.HasCheckConstraint("CHK_Usuario_Rol", "(Rol='Administrador' OR Rol='Guardia' OR Rol='Funcionario')");

                            t.HasCheckConstraint("CHK_Usuario_TipoDocumento", "(TipoDocumento='PA' OR TipoDocumento='CE' OR TipoDocumento='TI' OR TipoDocumento='CC')");
                        });
                });

            modelBuilder.Entity("API___NFC.Models.Aprendiz", b =>
                {
                    b.HasOne("API___NFC.Models.Ficha", "Ficha")
                        .WithMany()
                        .HasForeignKey("IdFicha")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ficha");
                });

            modelBuilder.Entity("API___NFC.Models.Elemento", b =>
                {
                    b.HasOne("API___NFC.Models.TipoElemento", "TipoElemento")
                        .WithMany()
                        .HasForeignKey("IdTipoElemento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoElemento");
                });

            modelBuilder.Entity("API___NFC.Models.ElementoProceso", b =>
                {
                    b.HasOne("API___NFC.Models.Elemento", "Elemento")
                        .WithMany()
                        .HasForeignKey("IdElemento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API___NFC.Models.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("IdProceso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elemento");

                    b.Navigation("Proceso");
                });

            modelBuilder.Entity("API___NFC.Models.Ficha", b =>
                {
                    b.HasOne("API___NFC.Models.Programa", "Programa")
                        .WithMany("Fichas")
                        .HasForeignKey("IdPrograma")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("API___NFC.Models.Proceso", b =>
                {
                    b.HasOne("API___NFC.Models.Aprendiz", "Aprendiz")
                        .WithMany()
                        .HasForeignKey("IdAprendiz")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API___NFC.Models.TipoProceso", "TipoProceso")
                        .WithMany()
                        .HasForeignKey("IdTipoProceso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API___NFC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Aprendiz");

                    b.Navigation("TipoProceso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API___NFC.Models.RegistroNFC", b =>
                {
                    b.HasOne("API___NFC.Models.Aprendiz", "Aprendiz")
                        .WithMany()
                        .HasForeignKey("IdAprendiz")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API___NFC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aprendiz");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API___NFC.Models.Programa", b =>
                {
                    b.Navigation("Fichas");
                });
#pragma warning restore 612, 618
        }
    }
}
